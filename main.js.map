{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto_project_ff/./src/components/cards.js","webpack://mesto_project_ff/./src/components/card.js","webpack://mesto_project_ff/./src/components/modal.js","webpack://mesto_project_ff/./src/scripts/index.js"],"sourcesContent":["export {initialCards};\r\n\r\nconst initialCards = [\r\n  {\r\n    name: \"Архыз\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n  },\r\n  {\r\n    name: \"Челябинская область\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n  },\r\n  {\r\n    name: \"Иваново\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n  },\r\n  {\r\n    name: \"Камчатка\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n  },\r\n  {\r\n    name: \"Холмогорский район\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n  },\r\n  {\r\n    name: \"Байкал\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n  }\r\n];","export { createCard, deleteCard, likeCard };\r\n\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\nfunction createCard(\r\n  card,\r\n  deleteCard,\r\n  likeCard,\r\n  openModalImage,\r\n  popupTypeImage\r\n) {\r\n  //ф-я создания карточки\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n  cardElement.querySelector(\".card__title\").textContent = card.name;\r\n\r\n  cardImage.addEventListener(\"click\", function (evt) {\r\n    openModalImage(popupTypeImage, evt);\r\n  });\r\n\r\n  cardElement\r\n    .querySelector(\".card__like-button\") //слушатель для лайка\r\n    .addEventListener(\"click\", function (evt) {\r\n      likeCard(evt);\r\n    });\r\n\r\n  cardElement\r\n    .querySelector(\".card__delete-button\") //слушатель для удаления карточки\r\n    .addEventListener(\"click\", function (evt) {\r\n      deleteCard(evt);\r\n    });\r\n\r\n  return cardElement;\r\n}\r\n\r\nfunction deleteCard(evt) {\r\n  // функция удаления карточки\r\n  evt.target.closest(\".places__item\").remove();\r\n}\r\n\r\nfunction likeCard(evt) {\r\n  //функция лайка\r\n  evt.target.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n","export { openModal, closeModal, closeForOverlayTypeEdit };\r\n\r\nfunction openModal(element) {\r\n  //ф-я открытия модального окна\r\n  element.classList.add(\"popup_is-opened\");\r\n  document.body.style.overflow = \"hidden\";\r\n  document.addEventListener(\"keydown\", keyDownLisnerEscForCloseModal); //слушатель ловит любые нажатия\r\n}\r\n\r\nfunction closeModal(element) {\r\n  //ф-я удаления модального окна\r\n  element.classList.remove(\"popup_is-opened\");\r\n  document.body.style.overflow = \"\"; //спрячем\r\n  document.removeEventListener(\"keydown\", keyDownLisnerEscForCloseModal); //удаляем слушателя на нажатие кнопки\r\n}\r\n\r\nfunction keyDownLisnerEscForCloseModal(evt) {\r\n  //клавишей esc с удалением слушателя\r\n  if (evt.key === \"Escape\") {\r\n    const element = document.querySelector(\".popup_is-opened\"); //получаем модальное окно\r\n    closeModal(element); //закрываем модальное окно\r\n  }\r\n}\r\n\r\nfunction closeForOverlayTypeEdit(evt) {\r\n  if (evt.target.classList.contains(\"popup_is-opened\")) {\r\n    //клик по оверлею\r\n    closeModal(document.querySelector(\".popup_is-opened\"));\r\n  }\r\n}\r\n","import \"../pages/index.css\"; //импорт стилей сss\r\nimport { initialCards } from \"../components/cards.js\"; //импорт массива карточек\r\nimport { createCard, deleteCard, likeCard } from \"../components/card.js\"; //импорт функций карточек\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  closeForOverlayTypeEdit,\r\n} from \"../components/modal.js\"; //импорт открытия и закрытия модалок\r\n\r\nconst content = document.querySelector(\".content\");\r\nconst cardContainer = content.querySelector(\".places__list\");\r\n\r\nconst profileEditButton = content.querySelector(\".profile__edit-button\"); //переменные для редактирования профиля\r\nconst popupProfileEdit = document.querySelector(\".popup_type_edit\");\r\nconst closeButtonPopupProfileEdit =\r\n  popupProfileEdit.querySelector(\".popup__close\");\r\n\r\nconst profileAddButton = content.querySelector(\".profile__add-button\"); //переменные для добавления новой карточки\r\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst closeButtonPopupTypeNewCard =\r\n  popupTypeNewCard.querySelector(\".popup__close\");\r\n\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst buttonCloseImageModal = popupTypeImage.querySelector(\".popup__close\"); //переменная кнопка закрытия модального изображения\r\n\r\nfunction updateProfileFromFormEdit(evt) {\r\n  //обновление профиля для формы редактировать\r\n  evt.preventDefault(); //отменяет стандартную отправку формы\r\n  const formElement = document.forms[\"edit-profile\"];\r\n  const nameInput = formElement.elements.name.value;\r\n  const jobInput = formElement.elements.description.value;\r\n\r\n  document.querySelector(\".profile__title\").textContent = nameInput;\r\n  document.querySelector(\".profile__description\").textContent = jobInput;\r\n\r\n  closeModal(popupProfileEdit);\r\n}\r\n\r\nfunction addNewCard(evt) {\r\n  //ф-я создания новой карточки\r\n  evt.preventDefault();\r\n  const formElement = document.forms[\"new-place\"];\r\n  const nameInput = formElement.elements[\"place-name\"].value;\r\n  const linkInput = formElement.elements.link.value;\r\n\r\n  const newCard = createCard(\r\n    {\r\n      name: nameInput,\r\n      link: linkInput,\r\n    },\r\n    deleteCard,\r\n    likeCard,\r\n    openModalForImage,\r\n    popupTypeImage\r\n  );\r\n  cardContainer.insertBefore(newCard, cardContainer.children[0]); //ставим новую карточку на первое место в списке карточек\r\n\r\n  closeModal(popupTypeNewCard);\r\n  formElement.reset(); //убираем все данные с формы добавления новой карточки после\r\n}\r\n\r\nfunction openModalEditProfile(element) {\r\n  //ф-я открытия модалки редактирования профиля\r\n  const name = document.querySelector(\".profile__title\").textContent;\r\n  const description = document.querySelector(\r\n    \".profile__description\"\r\n  ).textContent;\r\n  element.querySelector(\".popup__input_type_name\").value = name;\r\n  element.querySelector(\".popup__input_type_description\").value = description;\r\n  openModal(element);\r\n}\r\n\r\nfunction openModalForImage(element, evt) {\r\n  //ф-я открытия модальногот окна с изображаением\r\n  const popupImage = element.querySelector(\".popup__image\");\r\n  const alt = evt.target.alt;\r\n  popupImage.src = evt.target.src;\r\n  popupImage.alt = alt;\r\n  openModal(element);\r\n  element.querySelector(\".popup__caption\").textContent = alt;\r\n}\r\n\r\ninitialCards.forEach((card) => {\r\n  const newCard = createCard(\r\n    card,\r\n    deleteCard,\r\n    likeCard,\r\n    openModalForImage,\r\n    popupTypeImage\r\n  );\r\n  cardContainer.append(newCard); //перебор массива и создание новой карточки\r\n});\r\n\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  //слушатель открытия эдит\r\n  openModalEditProfile(popupProfileEdit);\r\n});\r\n\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  //слушатель открытия новой карточки\r\n  openModal(popupTypeNewCard);\r\n});\r\n\r\ncloseButtonPopupProfileEdit.addEventListener(\"click\", () => {\r\n  //вещаем слушателя на эдит х\r\n  closeModal(popupProfileEdit);\r\n});\r\n\r\npopupProfileEdit.addEventListener(\"click\", closeForOverlayTypeEdit); //вещаем слушателя на эдит оверлей\r\n\r\ncloseButtonPopupTypeNewCard.addEventListener(\"click\", () => {\r\n  closeModal(popupTypeNewCard); //слушатель закрывает модалку новой карточки\r\n});\r\n\r\npopupTypeNewCard.addEventListener(\"click\", closeForOverlayTypeEdit); //слушатель закрытия по оверлею\r\n\r\npopupProfileEdit.addEventListener(\"submit\", updateProfileFromFormEdit); //слушатель для эдита\r\n\r\npopupTypeNewCard.addEventListener(\"submit\", addNewCard); //слушатель для новой карточки\r\n\r\npopupProfileEdit.classList.add(\"popup_is-animated\"); //плавное закрытие и открытие попапа эдит\r\npopupTypeNewCard.classList.add(\"popup_is-animated\"); //плавное закрытие и открытие попапа  новой карточки\r\n\r\npopupTypeImage.classList.add(\"popup_is-animated\");\r\nbuttonCloseImageModal.addEventListener(\"click\", () => {\r\n  closeModal(popupTypeImage);\r\n});\r\n\r\npopupTypeImage.addEventListener(\"click\", closeForOverlayTypeEdit); //слушатель для оверлея\r\n"],"names":["cardTemplate","document","querySelector","content","createCard","card","deleteCard","likeCard","openModalImage","popupTypeImage","cardElement","cloneNode","cardImage","src","link","alt","name","textContent","addEventListener","evt","target","closest","remove","classList","toggle","openModal","element","add","body","style","overflow","keyDownLisnerEscForCloseModal","closeModal","removeEventListener","key","closeForOverlayTypeEdit","contains","cardContainer","profileEditButton","popupProfileEdit","closeButtonPopupProfileEdit","profileAddButton","popupTypeNewCard","closeButtonPopupTypeNewCard","buttonCloseImageModal","openModalForImage","popupImage","forEach","newCard","append","description","value","preventDefault","formElement","forms","nameInput","elements","jobInput","insertBefore","children","reset"],"sourceRoot":""}