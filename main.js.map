{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto_project_ff/./src/components/card.js","webpack://mesto_project_ff/./src/components/modal.js","webpack://mesto_project_ff/./src/components/api.js","webpack://mesto_project_ff/./src/components/validation.js","webpack://mesto_project_ff/./src/scripts/index.js"],"sourcesContent":["export {createCard, deleteCard, toggleLikeCard, checkLikeOwner};\r\n\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n/**\r\n * Подготовка карточки для её отрисовывания\r\n * @param card Данные карточки\r\n * @param deleteCard Метод удаления карточки\r\n * @param likeCard Метод постановки лайка карточки\r\n * @param openModalImage Метод открытия карточки на весь экран\r\n * @param popupTypeImage Модалка карточки на весь экран\r\n * @param userId Идентификатор пользователя\r\n * @returns {Node}\r\n */\r\nfunction createCard(\r\n    card,\r\n    deleteCard,\r\n    likeCard,\r\n    openModalImage,\r\n    popupTypeImage,\r\n    userId\r\n) {\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardLikeCount = card.likes.length;\r\n  const cardElementLikeCount = cardElement.querySelector(\".card__like-count\");\r\n  const buttonDelete = cardElement.querySelector(\".card__delete-button\");\r\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\r\n  const buttonLikeIcon = cardLikeButton.querySelector(\".card__like-svg\");\r\n\r\n  cardElement.id = card._id;\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n  cardElement.querySelector(\".card__title\").textContent = card.name;\r\n  cardElementLikeCount.textContent = cardLikeCount;\r\n\r\n  //Раскрыть изображение на весь экран\r\n  cardImage.addEventListener(\"click\", function (evt) {\r\n    openModalImage(popupTypeImage, evt);\r\n  });\r\n\r\n  if (card.owner._id === userId) {\r\n    //слушатель для удаления карточки\r\n    buttonDelete.classList.add('card__delete-button_active')\r\n    buttonDelete\r\n    .addEventListener(\"click\", function (evt) {\r\n      const newCard = evt.target.closest('.card');\r\n      deleteCard(newCard);\r\n    });\r\n  }\r\n\r\n  if (checkLikeOwner(card.likes, userId)) {\r\n    toggleLikeCard(buttonLikeIcon);\r\n  }\r\n\r\n  cardLikeButton\r\n  .addEventListener(\"click\", function () {\r\n    likeCard(card, cardElementLikeCount);\r\n    toggleLikeCard(buttonLikeIcon);\r\n  });\r\n\r\n  return cardElement;\r\n}\r\n\r\n/**\r\n * Удаление карточки с фронта\r\n * @param card Заполненный шаблон карточки на фронте\r\n */\r\nfunction deleteCard(card) {\r\n  card.remove();\r\n}\r\n\r\n/**\r\n * Поставка лайка (закрашивание)\r\n * @param evt Событие\r\n */\r\nfunction toggleLikeCard(buttonLike) {\r\n  //функция лайка\r\n  buttonLike.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n\r\nfunction checkLikeOwner(likes, userId) {\r\n  let res = false;\r\n  likes.forEach((like) => {\r\n    if (like._id === userId) {\r\n      res = true;\r\n    }\r\n  });\r\n  return res;\r\n}\r\n","export {openModal, closeModal, closeForOverlayTypeEdit};\r\n\r\nfunction openModal(element) {\r\n  //ф-я открытия модального окна\r\n  element.classList.add(\"popup_is-opened\");\r\n  document.body.style.overflow = \"hidden\";\r\n  document.addEventListener(\"keydown\", keyDownLisnerEscForCloseModal); //слушатель ловит любые нажатия\r\n}\r\n\r\nfunction closeModal(element) {\r\n  //ф-я удаления модального окна\r\n  element.classList.remove(\"popup_is-opened\");\r\n  document.body.style.overflow = \"\"; //спрячем\r\n  document.removeEventListener(\"keydown\", keyDownLisnerEscForCloseModal); //удаляем слушателя на нажатие кнопки\r\n}\r\n\r\nfunction keyDownLisnerEscForCloseModal(evt) {\r\n  //клавишей esc с удалением слушателя\r\n  if (evt.key === \"Escape\") {\r\n    const element = document.querySelector(\".popup_is-opened\"); //получаем модальное окно\r\n    closeModal(element); //закрываем модальное окно\r\n  }\r\n}\r\n\r\nfunction closeForOverlayTypeEdit(evt) {\r\n  if (evt.target.classList.contains(\"popup_is-opened\")) {\r\n    //клик по оверлею\r\n    closeModal(document.querySelector(\".popup_is-opened\"));\r\n  }\r\n}\r\n","const token = 'e788d5e8-6d06-4d1d-982f-c0022b4b878a';\r\nexport const getUserInfo = () => {\r\n  return fetch(`https://mesto.nomoreparties.co/wff-cohort-18/users/me`, {\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n};\r\nexport const getCards = () => {\r\n  return fetch('https://mesto.nomoreparties.co/wff-cohort-18/cards', {\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n}\r\n\r\nexport const updateUserInform = (userInfo) => {\r\n  return fetch(' https://mesto.nomoreparties.co/wff-cohort-18/users/me', {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n      name: userInfo.name,\r\n      about: userInfo.about,\r\n    }),\r\n    headers: {\r\n      authorization: token,\r\n      'Content-Type': 'application/json; charset=UTF-8'\r\n    }\r\n  })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n}\r\nexport const addNewCard = (cardsInfo) => {\r\n  return fetch('https://mesto.nomoreparties.co/wff-cohort-18/cards', {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      name: cardsInfo.name,\r\n      link: cardsInfo.link,\r\n    }),\r\n    headers: {\r\n      authorization: token,\r\n      'Content-Type': 'application/json; charset=UTF-8'\r\n    }\r\n  })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n}\r\n\r\nexport const deleteCard = (cardId) => {\r\n  return fetch('https://mesto.nomoreparties.co/wff-cohort-18/cards/' + cardId, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n}\r\n\r\nexport const addLikeCard = (cardId) => {\r\n  return fetch(\r\n      'https://mesto.nomoreparties.co/wff-cohort-18/cards/like/' + cardId, {\r\n        method: 'PUT',\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n}\r\n\r\nexport const deleteLikeCard = (cardId) => {\r\n  return fetch(\r\n      'https://mesto.nomoreparties.co/wff-cohort-18/cards/like/' + cardId, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n}\r\n\r\nexport const updateAvatar = (avatar) => {\r\n  return fetch('https://mesto.nomoreparties.co/wff-cohort-18/users/me/avatar',\r\n      {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({\r\n          avatar: avatar\r\n        }),\r\n        headers: {\r\n          authorization: token,\r\n          'Content-Type': 'application/json; charset=UTF-8'\r\n        }\r\n      })\r\n  .then((res) => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(res.status);\r\n      }\r\n  )\r\n}\r\n","export { enableValidation, clearValidation };\r\n\r\n//ф-я, которая добавляет класс с ошибкой\r\nconst showInputError = (validationConfig, formElement, formInput) => {\r\n  const errorElement = formElement.querySelector(`.${formInput.id}-error`);\r\n  formInput.classList.add(validationConfig.inputErrorClass); //добавляет инпуту класс с красной обводкой\r\n  errorElement.textContent = formInput.validationMessage;\r\n  // Показываем сообщение об ошибке\r\n  errorElement.classList.add(\"popup__error_visible\");\r\n};\r\n\r\n//ф-я, которая удаляет класс с ошибкой\r\nconst hideInputError = (formElement, formInput, validationConfig) => {\r\n  // Находим элемент ошибки\r\n  debugger\r\n  const errorElement = formElement.querySelector(`.${formInput.id}-error`);\r\n  formInput.classList.remove(validationConfig.inputErrorClass); //удаляет инпуту класс с красной обводкой\r\n  errorElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n//ф-я, которая проверяет валидность поля\r\nconst checkInputValidity = (formElement, formInput, validationConfig) => {\r\n  if (formInput.validity.valueMissing)\r\n    formInput.setCustomValidity(formInput.dataset.errorEmpty); //если пустое\r\n  else if (formInput.validity.patternMismatch)\r\n    formInput.setCustomValidity(formInput.dataset.errorPattern);\r\n  //соответствует патерну\r\n  else if (formInput.validity.typeMismatch)\r\n    formInput.setCustomValidity(formInput.dataset.errorType);\r\n  //соответствует значению type\r\n  else formInput.setCustomValidity(\"\");\r\n  if (!formInput.validity.valid)\r\n    showInputError(validationConfig, formElement, formInput);\r\n  else hideInputError(formElement, formInput, validationConfig);\r\n};\r\n\r\nconst setEventListeners = (validationConfig, popupForm) => {\r\n  const inputList = Array.from(\r\n    popupForm.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = popupForm.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  inputList.forEach((formInput) => {\r\n    formInput.addEventListener(\"input\", () => {\r\n      checkInputValidity(popupForm, formInput, validationConfig);\r\n      toggleButtonState(validationConfig, inputList, buttonElement);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  debugger\r\n  formList.forEach((popupForm) => {\r\n    debugger\r\n    popupForm.addEventListener(\"submit\", (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(validationConfig, popupForm);\r\n  });\r\n};\r\n\r\nconst clearValidation = (validationConfig, form) => {\r\n  const errorlist = Array.from(\r\n    form.querySelectorAll(validationConfig.errorSelector)\r\n  );\r\n  const inputList = Array.from(\r\n    form.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = form.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  form.reset();\r\n  errorlist.forEach((error) => {\r\n    error.classList.remove(validationConfig.errorClass);\r\n    error.textContent = \"\";\r\n  });\r\n  inputList.forEach((formInput) =>\r\n    formInput.classList.remove(validationConfig.inputErrorClass)\r\n  );\r\n  toggleButtonState(validationConfig, inputList, buttonElement);\r\n};\r\n\r\n//Ф-Я \"блокировки\" ищет невалидные поля\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((formInput) => {\r\n    return !formInput.validity.valid;\r\n  });\r\n};\r\n\r\n//ф-я состояния кнопки переключения\r\nconst toggleButtonState = (validationConfig, inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import \"../pages/index.css\"; //импорт стилей сss\r\nimport {checkLikeOwner, createCard, deleteCard} from \"../components/card.js\"; //импорт функций карточек\r\nimport {\r\n  closeForOverlayTypeEdit,\r\n  closeModal,\r\n  openModal,\r\n} from \"../components/modal.js\"; //импорт открытия и закрытия модалок\r\nimport * as api from \"../components/api.js\";\r\nimport {clearValidation, enableValidation} from \"../components/validation.js\";\r\n\r\nconst validConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n  errorSelector: \".form__input-error\",\r\n};\r\n\r\nconst SAVING = 'Сохранение...';\r\nconst SAVE = 'Сохранить';\r\n\r\nconst content = document.querySelector(\".content\");\r\nconst cardContainer = content.querySelector(\".places__list\");\r\n\r\nconst profileEditButton = content.querySelector(\".profile__edit-button\"); //переменные для редактирования профиля\r\nconst popupProfileEdit = document.querySelector(\".popup_type_edit\");\r\nconst closeButtonPopupProfileEdit =\r\n    popupProfileEdit.querySelector(\".popup__close\");\r\nconst profileEditForm = document.forms.edit_profile;\r\nconst buttonSubmitPopupProfileEdit = popupProfileEdit.querySelector(\r\n    \".popup__button\");\r\n\r\nconst profileAddButton = content.querySelector(\".profile__add-button\"); //переменные для добавления новой карточки\r\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst closeButtonPopupTypeNewCard =\r\n    popupTypeNewCard.querySelector(\".popup__close\");\r\nconst newPlaceForm = document.forms.new_place;\r\nconst buttonSubmitPopupTypeNewCard = popupTypeNewCard.querySelector(\r\n    \".popup__button\");\r\n\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst buttonCloseImageModal = popupTypeImage.querySelector(\".popup__close\"); //переменная кнопка закрытия модального изображения\r\n\r\nconst popupDeleteCard = document.querySelector(\".popup_type_delete_card\");\r\nconst buttonClosePopupDeleteCard = popupDeleteCard.querySelector(\r\n    \".popup__close\");\r\nconst buttonConfirmationDeleteCard = popupDeleteCard.querySelector(\r\n    \".popup__confirmation\");\r\nconst profile = document.querySelector(\".profile\");\r\n\r\nconst userAvatar = profile.querySelector(\".profile__image\");\r\nconst profileAvatar = profile.querySelector(\".profile__avatar\");\r\nconst modalEditUserAvatar = document.querySelector(\".popup_type_edit-avatar\");\r\nconst buttonCloseModalEditUserAvatar = modalEditUserAvatar.querySelector(\r\n    \".popup__close\");\r\nconst buttonSubmitEditUserAvatar = modalEditUserAvatar.querySelector(\r\n    \".popup__button\")\r\nconst editAvatarForm = document.forms.edit_avatar;\r\n\r\nlet userId = '';\r\n\r\n//обновление профиля для формы редактировать\r\nfunction updateProfileFromFormEdit(evt) {\r\n  evt.preventDefault(); //отменяет стандартную отправку формы\r\n  buttonSubmitPopupProfileEdit.textContent = SAVING;\r\n  const formElement = document.forms.edit_profile;\r\n  const nameInput = formElement.elements.name.value;\r\n  const jobInput = formElement.elements.description.value;\r\n  api.updateUserInform({name: nameInput, about: jobInput})\r\n  .then((result) => {\r\n    fillingUserData(result);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    closeModal(popupProfileEdit);\r\n    buttonSubmitPopupProfileEdit.textContent = SAVE;\r\n  });\r\n}\r\n\r\nfillingData();\r\n\r\nfunction fillingData() {\r\n  Promise.all([api.getUserInfo(), api.getCards()])\r\n  .then(([userInfoResponse, cardsResponse]) => {\r\n    fillingUserData(userInfoResponse);\r\n    fillingCardsData(cardsResponse);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\n\r\nfunction fillingUserData(userInfoResponse) {\r\n  userAvatar.src = userInfoResponse.avatar;\r\n  profile.querySelector(\".profile__title\").textContent = userInfoResponse.name;\r\n  profile.querySelector(\r\n      \".profile__description\").textContent = userInfoResponse.about;\r\n  userId = userInfoResponse._id;\r\n}\r\n\r\nfunction addNewCard(evt) {\r\n  //ф-я создания новой карточки\r\n  evt.preventDefault();\r\n  buttonSubmitPopupTypeNewCard.textContent = SAVING;\r\n  const formElement = document.forms.new_place;\r\n  const nameInput = formElement.elements[\"place-name\"].value;\r\n  const linkInput = formElement.elements.link.value;\r\n\r\n  api.addNewCard({name: nameInput, link: linkInput})\r\n  .then((result) => {\r\n    const newCard = createCard(result, openModalForDeleteCard, likedCard,\r\n        openModalForImage,\r\n        popupTypeImage, userId);\r\n    cardContainer.insertBefore(newCard, cardContainer.children[0]); //ставим новую карточку на первое место в списке карточек\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    closeModal(popupTypeNewCard);\r\n    formElement.reset();\r\n    buttonSubmitPopupTypeNewCard.textContent = SAVE;\r\n  });\r\n}\r\n\r\nfunction openModalEditProfile(element) {\r\n  //ф-я открытия модалки редактирования профиля\r\n  clearValidation(validConfig, profileEditForm);\r\n  const name = document.querySelector(\".profile__title\").textContent;\r\n  const description = document.querySelector(\r\n      \".profile__description\"\r\n  ).textContent;\r\n  element.querySelector(\".popup__input_type_name\").value = name;\r\n  element.querySelector(\".popup__input_type_description\").value = description;\r\n  openModal(element);\r\n}\r\n\r\nfunction openModalForDeleteCard(card) {\r\n  openModal(popupDeleteCard);\r\n  buttonConfirmationDeleteCard.addEventListener('click',\r\n      () => confirmationDeleteCard(card, popupDeleteCard));\r\n}\r\n\r\nfunction confirmationDeleteCard(card, deleteModal) {\r\n  api.deleteCard(card.id)\r\n  .then(() => {\r\n    deleteCard(card);\r\n    closeModal(deleteModal);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\n\r\nfunction openModalForImage(element, evt) {\r\n  //ф-я открытия модальногот окна с изображаением\r\n  const popupImage = element.querySelector(\".popup__image\");\r\n  const alt = evt.target.alt;\r\n  popupImage.src = evt.target.src;\r\n  popupImage.alt = alt;\r\n  openModal(element);\r\n  element.querySelector(\".popup__caption\").textContent = alt;\r\n}\r\n\r\nfunction fillingCardsData(cardList) {\r\n  cardList.forEach((card) => {\r\n    const newCard = createCard(\r\n        card,\r\n        openModalForDeleteCard,\r\n        likedCard,\r\n        openModalForImage,\r\n        popupTypeImage,\r\n        userId\r\n    );\r\n    cardContainer.append(newCard); //перебор массива и создание новой карточки\r\n  });\r\n}\r\n\r\nfunction updateAvatar(evt) {\r\n  evt.preventDefault();\r\n  buttonSubmitEditUserAvatar.textContent = SAVING;\r\n  const editAvatar = document.forms.edit_avatar;\r\n  api.updateAvatar(editAvatar.link.value)\r\n  .then((result) => {\r\n    fillingUserData(result);\r\n    closeModal(modalEditUserAvatar);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n  .finally(() => (buttonSubmitEditUserAvatar.textContent = SAVE));\r\n\r\n}\r\n\r\nenableValidation(validConfig);\r\n\r\nfunction likedCard(card, cardLikeCount) {\r\n  debugger;\r\n  if (checkLikeOwner(card.likes, userId)) {\r\n    api.deleteLikeCard(card._id)\r\n    .then((res) => updateLikedCard(res, card, cardLikeCount))\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  } else {\r\n    api.addLikeCard(card._id)\r\n    .then((res) => updateLikedCard(res, card, cardLikeCount))\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n}\r\n\r\nfunction updateLikedCard(data, card, count) {\r\n  card.likes = data.likes;\r\n  count.textContent = card.likes.length;\r\n}\r\n\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  //слушатель открытия эдит\r\n  openModalEditProfile(popupProfileEdit);\r\n});\r\n\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  //слушатель открытия новой карточки\r\n  clearValidation(validConfig, newPlaceForm);\r\n  openModal(popupTypeNewCard);\r\n});\r\n\r\ncloseButtonPopupProfileEdit.addEventListener(\"click\", () => {\r\n  //вещаем слушателя на эдит х\r\n  closeModal(popupProfileEdit);\r\n});\r\n\r\npopupProfileEdit.addEventListener(\"click\", closeForOverlayTypeEdit); //вещаем слушателя на эдит оверлей\r\n\r\ncloseButtonPopupTypeNewCard.addEventListener(\"click\", () => {\r\n  closeModal(popupTypeNewCard); //слушатель закрывает модалку новой карточки\r\n});\r\n\r\npopupTypeNewCard.addEventListener(\"click\", closeForOverlayTypeEdit); //слушатель закрытия по оверлею\r\n\r\npopupProfileEdit.addEventListener(\"submit\", updateProfileFromFormEdit); //слушатель для эдита\r\n\r\npopupTypeNewCard.addEventListener(\"submit\", addNewCard); //слушатель для новой карточки\r\n\r\npopupProfileEdit.classList.add(\"popup_is-animated\"); //плавное закрытие и открытие попапа эдит\r\npopupTypeNewCard.classList.add(\"popup_is-animated\"); //плавное закрытие и открытие попапа  новой карточки\r\n\r\npopupTypeImage.classList.add(\"popup_is-animated\");\r\nbuttonCloseImageModal.addEventListener(\"click\", () => {\r\n  closeModal(popupTypeImage);\r\n});\r\n\r\npopupTypeImage.addEventListener(\"click\", closeForOverlayTypeEdit); //слушатель для оверлея\r\n\r\nbuttonClosePopupDeleteCard.addEventListener(\"click\", () => {\r\n  closeModal(popupDeleteCard);\r\n});\r\n\r\npopupDeleteCard.addEventListener(\"click\", closeForOverlayTypeEdit);\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n  clearValidation(validConfig, editAvatarForm);\r\n  openModal(modalEditUserAvatar);\r\n});\r\n\r\nbuttonCloseModalEditUserAvatar.addEventListener(\"click\", () => {\r\n  closeModal(modalEditUserAvatar);\r\n});\r\n\r\nmodalEditUserAvatar.addEventListener(\"click\", closeForOverlayTypeEdit);\r\n\r\nmodalEditUserAvatar.addEventListener(\"submit\", updateAvatar);\r\n\r\n\r\n\r\n\r\n"],"names":["cardTemplate","document","querySelector","content","createCard","card","deleteCard","likeCard","openModalImage","popupTypeImage","userId","cardElement","cloneNode","cardImage","cardLikeCount","likes","length","cardElementLikeCount","buttonDelete","cardLikeButton","buttonLikeIcon","id","_id","src","link","alt","name","textContent","addEventListener","evt","owner","classList","add","newCard","target","closest","checkLikeOwner","toggleLikeCard","buttonLike","toggle","res","forEach","like","openModal","element","body","style","overflow","keyDownLisnerEscForCloseModal","closeModal","remove","removeEventListener","key","closeForOverlayTypeEdit","contains","token","clearValidation","validationConfig","form","errorlist","Array","from","querySelectorAll","errorSelector","inputList","inputSelector","buttonElement","submitButtonSelector","reset","error","errorClass","formInput","inputErrorClass","toggleButtonState","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","validConfig","formSelector","SAVING","SAVE","cardContainer","profileEditButton","popupProfileEdit","closeButtonPopupProfileEdit","profileEditForm","forms","edit_profile","buttonSubmitPopupProfileEdit","profileAddButton","popupTypeNewCard","closeButtonPopupTypeNewCard","newPlaceForm","new_place","buttonSubmitPopupTypeNewCard","buttonCloseImageModal","popupDeleteCard","buttonClosePopupDeleteCard","buttonConfirmationDeleteCard","profile","userAvatar","profileAvatar","modalEditUserAvatar","buttonCloseModalEditUserAvatar","buttonSubmitEditUserAvatar","editAvatarForm","edit_avatar","fillingUserData","userInfoResponse","avatar","about","openModalForDeleteCard","deleteModal","cardId","fetch","method","headers","authorization","then","ok","json","Promise","reject","status","catch","err","console","log","confirmationDeleteCard","openModalForImage","popupImage","likedCard","updateLikedCard","api","data","count","all","_ref","_ref2","cardsResponse","append","popupForm","preventDefault","formElement","valueMissing","setCustomValidity","dataset","errorEmpty","patternMismatch","errorPattern","typeMismatch","errorType","errorElement","concat","hideInputError","validationMessage","showInputError","checkInputValidity","setEventListeners","description","value","openModalEditProfile","userInfo","elements","JSON","stringify","result","finally","cardsInfo","insertBefore","children"],"sourceRoot":""}